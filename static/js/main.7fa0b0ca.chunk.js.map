{"version":3,"sources":["components/filter/Filter.module.css","components/container/Container.module.css","components/form/Form.module.css","components/container/Container.js","components/form/Form.js","components/contactList/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js","components/contactList/Contact.module.css"],"names":["module","exports","Container","children","className","s","container","Form","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","reset","preventDefault","form","htmlFor","label","type","pattern","title","required","onChange","id","input","btn","ContactItem","onDeleteContact","onClick","button","ContactList","contacts","list","map","Filter","App","JSON","parse","window","localStorage","getItem","setContact","useEffect","setItem","stringify","filter","setFilter","results","normalizedFilter","toLowerCase","contact","includes","filterContacts","newContact","uuidv4","some","alert","prevContacts","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fa0b0ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2mQLH\",\"input\":\"Filter_input__2l1tD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__tVcUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2YtLn\",\"label\":\"Form_label__3stfK\",\"input\":\"Form_input__1w1Kf\",\"btn\":\"Form_btn__s1QHu\"};","import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","// import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Form.module.css\";\r\n\r\nfunction Form({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label htmlFor={nameInputId} className={s.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          className={s.input}\r\n        />\r\n\r\n        <label htmlFor={numberInputId} className={s.label}>\r\n          Number\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n          className={s.input}\r\n        />\r\n\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","// import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li>\r\n      <span>{name}: </span>\r\n      <span>{number}</span>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n        className={s.button}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","// import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n          key={id}\r\n          id={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// class ContactList extends Component {\r\n//   render() {\r\n//     const contacts = this.props.contacts;\r\n//     const deleteContacts = this.props.onDeleteContact;\r\n//     console.log(contacts);\r\n//     return (\r\n//       <ul>\r\n//         {contacts.map(({ id, name, number }) => (\r\n//           <ContactItem\r\n//             name={name}\r\n//             number={number}\r\n//             onDeleteContact={deleteContacts}\r\n//             key={id}\r\n//             id={id}\r\n//           />\r\n//         ))}\r\n//       </ul>\r\n//     );\r\n//   }\r\n// }\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Container from \"./container/Container\";\nimport Form from \"./form/Form\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\n\nfunction App() {\n  const [contacts, setContact] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? \"\";\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    // this.setState(({ contacts }) => {\n    if (contacts.some((contact) => contact.name === name)) {\n      return alert(`${name} is already in contacts!`);\n    }\n\n    setContact((prevContacts) => [newContact, ...contacts]);\n  };\n\n  // this.setState(({ contacts }) => ({\n  //   contacts: [newContact, ...contacts],\n  // }));\n  const [filter, setFilter] = useState(\"\");\n\n  const watchFilter = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = (id) => {\n    setContact((prevContacts) =>\n      prevContacts.filter((contact) => contact.id !== id)\n    );\n  };\n\n  const results = filterContacts();\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form onSubmit={addContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={watchFilter} />\n      <ContactList contacts={results} onDeleteContact={deleteContact} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__1hdCz\",\"button\":\"Contact_button__212vN\"};"],"sourceRoot":""}